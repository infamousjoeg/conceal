name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write  # Required for OIDC JWT authentication

jobs:
  release:
    runs-on: macos-latest  # Changed to macOS for code signing and notarization
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: stable

    - name: Generate changelog
      run: |
        # Generate changelog since last tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$PREV_TAG" ]; then
          echo "## Changes since $PREV_TAG" > CHANGELOG.md
          git log --oneline $PREV_TAG..HEAD >> CHANGELOG.md
        else
          echo "## Initial Release" > CHANGELOG.md
          git log --oneline >> CHANGELOG.md
        fi

    - name: Import Code-Signing Certificates
      if: ${{ secrets.MACOS_SIGN_P12 != '' && secrets.MACOS_SIGN_PASSWORD != '' }}
      run: |
        # Create variables for certificate handling
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        
        # Import certificate and provisioning profile from secrets
        echo -n "${{ secrets.MACOS_SIGN_P12 }}" | base64 --decode -o $CERTIFICATE_PATH
        
        # Create temporary keychain
        security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" $KEYCHAIN_PATH
        
        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "${{ secrets.MACOS_SIGN_PASSWORD }}" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security set-key-partition-list -S apple-tool:,apple: -s -k "${{ secrets.KEYCHAIN_PASSWORD }}" $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Apple Developer Code Signing (from GitHub Secrets - may be empty)
        MACOS_SIGN_P12: ${{ secrets.MACOS_SIGN_P12 }}
        MACOS_SIGN_PASSWORD: ${{ secrets.MACOS_SIGN_PASSWORD }}
        MACOS_SIGN_IDENTITY: ${{ secrets.MACOS_SIGN_IDENTITY }}
        # Apple Developer Notarization (from GitHub Secrets - may be empty)  
        MACOS_NOTARY_ISSUER_ID: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}
        MACOS_NOTARY_KEY_ID: ${{ secrets.MACOS_NOTARY_KEY_ID }}
        MACOS_NOTARY_KEY: ${{ secrets.MACOS_NOTARY_KEY }}
        # Apple Developer ID Installer (from GitHub Secrets - may be empty)
        MACOS_INSTALLER_P12: ${{ secrets.MACOS_INSTALLER_P12 }}
        MACOS_INSTALLER_PASSWORD: ${{ secrets.MACOS_INSTALLER_PASSWORD }}
        MACOS_INSTALLER_IDENTITY: ${{ secrets.MACOS_INSTALLER_IDENTITY }}
        # Chocolatey Package Management (from GitHub Secrets - may be empty)
        CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}

    - name: Clean up keychain
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db || true

  homebrew-update:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Update Homebrew formula
      uses: mislav/bump-homebrew-formula-action@v3
      with:
        formula-name: conceal
        homebrew-tap: infamousjoeg/homebrew-tap
        base-branch: main
      env:
        COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}